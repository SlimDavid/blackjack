% The task for this week is to implement the deck with the interface below:

-module(deck).
-behaviour(gen_server).
% global_name (?MODULE)
% it should consist of 6 decks (might be configurable in the future)


-type suite() :: spades | hearts | clubs | diamonds
-type value() :: 2..10 | jack | queen | king | ace
-type card() :: {suite(), value()}

% functions
% all public functions except start/0 should use gen_server:call
api:
-export([start/0]).
-export([stop/0]).
-export([is_time_to_shuffle/0]).
-export([shuffle/0]).
-export([get_card/0]).

start() % start the gen_server deck

% stop the gen_server deck (useful for unit testing)
-spec stop() :: ok.

-spec is_time_to_shuffle() :: bool().
-spec shuffle() :: ok.
-spec get_card() :: card().
